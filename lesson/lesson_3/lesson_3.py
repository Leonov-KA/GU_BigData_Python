"""
1) Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""

# def my_function():
#     while 1 == 1:
#         try:
#             a = float(input("Делимое: "))
#             b = float(input("Делитель: "))
#             c = c = a / b
#         except ValueError:
#             print("Введите число")
#         except ZeroDivisionError:
#             print("Нельзя делить на ноль")
#         else:
#             print(f"Частное: {c}")
#             break
# #    return c    # Не получилось использовать функцию "return", для добавления парметра "с"
#
# qwe = my_function()

"""
2) Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры
как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
"""

#
# def user_data(first_name, last_name, year_of_birth, city_of_residence, email, phone):
#     print(f"имя: {first_name}, фамилия: {last_name}, год рождения: {year_of_birth},"
#           f"город проживания: {city_of_residence}, email: {email}, телефон: {phone}")
#
# # Почему если оставить мало строк меду заданной функцие и местом её вызова,
# # тект ниже начинает подчёркиваться жёлтой волнистой линией?
#
#
# user_data(first_name=input("Укажите своё имя: "), last_name=input("Укажите свою фамилию: "),
#           year_of_birth=input("Укажите свою дату рождения: "),
#           city_of_residence=input("Укажите город проживания: "),
#           email=input("Укажите свой email: "), phone=input("Укажите свой номер телефона: "))

"""
3) Реализовать функцию my_func(), которая принимает три позиционных аргумента,
и возвращает сумму наибольших двух аргументов.
"""


# def my_func(x, y, z):   # -> object: PyCharm подсказывает сделат такое дополнение, но не очень понимаю что это значит.
#     a = [x, y, z]
#     a.sort()
#     a.pop(0)
#     print(sum(a))
#
#
# my_func(100, 20, 300)


"""
4) Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить
возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания
необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""


# def my_func(x, y):
#     while x or y:       #Как корректно задать условия для цыкла?
#         try:
#             c = y       #Как сделать корректую проверку, являеться ли "Y" целым числом?
#             if x <= 0 or y >= 0 or int(c) != y:
#                 1/0
#         except Exception:
#             print("Некорректные данные")
#             x = float(input("Введите положительное число X: "))
#             y = float(input("Введите целое отрицательное число Y: "))
#         else:
#             c = x ** y
#             print(f'{x} в степени {int(y)} равняется {c}')
#             break
#
#
# my_func(100, -0.5)


"""
5) Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться
сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь
введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ,
выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить
сумму этих чисел к полученной ранее сумме и после этого завершить программу.
"""

